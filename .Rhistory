from = "fertilizer",
to = "herbivory",
controlling_for = "light",
node_size = 25,
edge_type = "link")
ggdag_dconnected(dag_inthe_bag,
from = "fertilizer",
to = "herbivory",
controlling_for = "foraging",
node_size = 25,edge_type = "link")
library(lavaan)
library(lavaanPlot)
data = read.csv("Documents/GitHub/EECB1000_Causality/data.csv")
vars = c(colnames(data))
fertilizer = data$fertilizer
light = data$light
plant_size = data$plant_size
foraging = data$foraging
herbivory = data$herbivory
sem_mod =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light + c*fertilizer
foraging ~ light
herbivory :=  a*b
'
sem_fit <- sem(sem_mod, data=data)
summary(sem_fit)
lavaanPlot(model = sem_fit,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
sem_mod1 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
'
sem_fit1 <- sem(sem_mod1, data=data)
summary(sem_fit1)
lavaanPlot(model = sem_fit1,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_mod1.5 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light + c*fertilizer
foraging ~ light
herbivory :=  a*b
'
sem_fit1.5 <- sem(sem_mod1.5, data=data)
summary(sem_fit1.5)
lavaanPlot(model = sem_fit1.5,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1.5, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_mod1.9 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light + c*fertilizer
foraging ~ light
'
sem_fit1.9 <- sem(sem_mod1.9, data=data)
summary(sem_fit1.9)
lavaanPlot(model = sem_fit1.9,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1.9, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_mod2 =   '
# observed outcomes to observed predictors
plant_size ~ fertilizer + light
herbivory ~ plant_size + foraging + light
foraging ~ light + plant_size
'
sem_fit2 <- sem(sem_mod2, data=data)
summary(sem_fit2)
lavaanPlot(model = sem_fit2,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit2, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
library(lme4)
glm1 = lmer(herbivory~foraging+light+plant_size+fertilizer, data = data, REML = TRUE)
glm1 = glm(herbivory~foraging+light+plant_size+fertilizer, data = data, family = "gaussian")
summary(glm1)
pairs(data)
summary(glm1)
sem_mod1 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
'
sem_fit1 <- sem(sem_mod1, data=data)
summary(sem_fit1)
lavaanPlot(model = sem_fit1,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
sem_mod1 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
plant_size ~~ 1
'
sem_fit1 <- sem(sem_mod1, data=data)
summary(glm1)$coefficients
standardizedsolution(sem_fit1)
glm1 = glm(herbivory~foraging+light+plant_size+fertilizer, data = data, family = "gaussian")
summary(glm1)$coefficients
sem_mod1 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
'
sem_fit1 <- sem(sem_mod1, data=data)
summary(sem_fit1)
standardizedsolution(sem_fit1)
lavaanPlot(model = sem_fit1,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_mod1.5 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light + c*fertilizer
foraging ~ light
indirect :=  a*b
'
sem_fit1.5 <- sem(sem_mod1.5, data=data)
summary(sem_fit1.5)
lavaanPlot(model = sem_fit1.5,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1.5, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_mod1.5 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
indirect :=  a*b
'
sem_fit1.5 <- sem(sem_mod1.5, data=data)
summary(sem_fit1.5)
lavaanPlot(model = sem_fit1.5,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1.5, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_fit1.5 <- sem(sem_mod1.5, data=data)
summary(sem_fit1.5)
lavaanPlot(model = sem_fit1.5,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1.5, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_mod1.9 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light + c*fertilizer
foraging ~ light
'
sem_fit1.9 <- sem(sem_mod1.9, data=data)
summary(sem_fit1.9)
lavaanPlot(model = sem_fit1.9,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
sem_mod1.6 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light  + c*fertilizer
foraging ~ light
Med_mod :=  a*b
Total_mod :=  Med_mod + c
'
sem_fit1.6 <- sem(sem_mod1.6, data=data)
summary(sem_fit1.6)
lavaanPlot(model = sem_fit1.6,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1.6, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_mod1.6 =   '
# Mediaton / Moderation effect
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light  + c*fertilizer
foraging ~ light
Med :=  a*b
Total_mod :=  Med + c
'
sem_fit1.6 <- sem(sem_mod1.6, data=data)
summary(sem_fit1.6)
lavaanPlot(model = sem_fit1.6,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
library(dagitty)
library(ggdag)
library(ggpubr)
library(gridExtra)
dag_inthe_bag <- dagify(
plant_size ~ fertilizer + light,
herbivory ~ plant_size + foraging + light,
foraging ~ light,
exposure = "fertilizer",
outcome = "herbivory",
labels = c(
"fertilizer" = "fertilizer",
"herbivory" = "herbivory",
"plant_size" = "plant size",
"light" = "light",
"foraging" = "foraging"
)
)%>% tidy_dagitty()
theme_set(theme_dag())
ggdag(dag_inthe_bag, layout = "nicely",
node = FALSE,
label_col = "black",
text_col = "black")
ggdag_adjustment_set(dag_inthe_bag,
exposure = "fertilizer",
outcome = "herbivory",
node_size = 25,
shadow = TRUE)
ggdag_dconnected(dag_inthe_bag,
from = "fertilizer",
to = "herbivory",
controlling_for = "plant_size",
node_size = 25,
edge_type = "link")
ggdag_dconnected(dag_inthe_bag,
from = "fertilizer",
to = "herbivory",
controlling_for = "light",
node_size = 25,
edge_type = "link")
ggdag_dconnected(dag_inthe_bag,
from = "fertilizer",
to = "herbivory",
controlling_for = "foraging",
node_size = 25,edge_type = "link")
library(lavaan)
library(lavaanPlot)
library(lme4)
data = read.csv("Documents/GitHub/EECB1000_Causality/data.csv")
vars = c(colnames(data))
fertilizer = data$fertilizer
light = data$light
plant_size = data$plant_size
foraging = data$foraging
herbivory = data$herbivory
pairs(data)
glm1 = glm(herbivory~foraging+light+plant_size+fertilizer, data = data, family = "gaussian")
summary(glm1)$coefficients
sem_mod1 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
'
sem_fit1 <- sem(sem_mod1, data=data)
summary(sem_fit1)
standardizedsolution(sem_fit1)
lavaanPlot(model = sem_fit1,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_mod1.5 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
indirect :=  a*b
'
sem_fit1.5 <- sem(sem_mod1.5, data=data)
summary(sem_fit1.5)
lavaanPlot(model = sem_fit1.5,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1.5, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_mod1.6 =   '
# Mediaton / Moderation effect
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light  + c*fertilizer
foraging ~ light
Med :=  a*b
Total_mod :=  Med + c
'
sem_fit1.6 <- sem(sem_mod1.6, data=data)
summary(sem_fit1.6)
lavaanPlot(model = sem_fit1.6,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1.6, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_mod1.9 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light + c*fertilizer
foraging ~ light
'
sem_fit1.9 <- sem(sem_mod1.9, data=data)
summary(sem_fit1.9)
lavaanPlot(model = sem_fit1.9,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1.9, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_mod2 =   '
# observed outcomes to observed predictors
plant_size ~ fertilizer + light
herbivory ~ plant_size + foraging + light
foraging ~ light + plant_size
'
sem_fit2 <- sem(sem_mod2, data=data)
summary(sem_fit2)
lavaanPlot(model = sem_fit2,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit2, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
dag_inthe_bag <- dagify(
plant_size ~ fertilizer + light,
herbivory ~ plant_size + foraging + light,
foraging ~ light,
exposure = "fertilizer",
outcome = "herbivory",
labels = c(
"fertilizer" = "fertilizer",
"herbivory" = "herbivory",
"plant_size" = "plant size",
"light" = "light",
"foraging" = "foraging"
)
)%>% tidy_dagitty()
theme_set(theme_dag())
ggdag(dag_inthe_bag, layout = "nicely",
node = FALSE,
label_col = "black",
text_col = "black")
ggdag_adjustment_set(dag_inthe_bag,
exposure = "fertilizer",
outcome = "herbivory",
node_size = 25,
shadow = TRUE)
ggdag_dconnected(dag_inthe_bag,
from = "fertilizer",
to = "herbivory",
controlling_for = "plant_size",
node_size = 25,
edge_type = "link")
ggdag_dconnected(dag_inthe_bag,
from = "fertilizer",
to = "herbivory",
controlling_for = "plant_size",
node_size = 25,
edge_type = "link")
ggdag_dconnected(dag_inthe_bag,
from = "fertilizer",
to = "herbivory",
controlling_for = "light",
node_size = 25,
edge_type = "link")
ggdag_dconnected(dag_inthe_bag,
from = "fertilizer",
to = "herbivory",
controlling_for = "foraging",
node_size = 25,edge_type = "link")
sem_mod1.6 =   '
# Mediaton / Moderation effect
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light  + c*fertilizer
foraging ~ light
Med :=  a*b
Total_mod :=  Med + c
'
sem_fit1.6 <- sem(sem_mod1.6, data=data)
summary(sem_fit1.6)
lavaanPlot(model = sem_fit1.6,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
sem_mod1.6 =   '
# Mediaton / Moderation effect
plant_size ~ a*fertilizer + light
herbivory ~ b*foraging + light  + c*fertilizer
foraging ~ light + plant_size
Med :=  a*b
Total_mod :=  Med + c
'
sem_fit1.6 <- sem(sem_mod1.6, data=data)
summary(sem_fit1.6)
lavaanPlot(model = sem_fit1.6,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1.6, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_mod1.6 =   '
# Mediaton / Moderation effect
plant_size ~ a*fertilizer + light
herbivory ~ foraging + light  + c*fertilizer
foraging ~ light + b*plant_size
Med :=  a*b
Total_mod :=  Med + c
'
sem_fit1.6 <- sem(sem_mod1.6, data=data)
summary(sem_fit1.6)
lavaanPlot(model = sem_fit1.6,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
sem_mod1.6 =   '
# Mediaton / Moderation effect
plant_size ~ a*fertilizer + light
herbivory ~ foraging + light  + c*fertilizer
foraging ~ light + b*plant_size
Med :=  a*b
Total_mod :=  Med + c
'
sem_fit1.6 <- sem(sem_mod1.6, data=data)
summary(sem_fit1.6)
lavaanPlot(model = sem_fit1.6,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1.6, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
glm1 = glm(herbivory~foraging+light+plant_size+fertilizer, data = data, family = "gaussian")
summary(glm1)$coefficients
summary(glm1)
sem_mod1 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
'
sem_fit1 <- sem(sem_mod1, data=data)
summary(sem_fit1)
sem_mod1.6 =   '
# Mediaton / Moderation effect
plant_size ~ a*fertilizer + light
herbivory ~ foraging + light  + c*fertilizer
foraging ~ light + b*plant_size
Med :=  a*b
Total_mod :=  Med + c
'
sem_fit1.6 <- sem(sem_mod1.6, data=data)
summary(sem_fit1.6)
lavaanPlot(model = sem_fit1.6,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
summary(sem_fit1.6, rsq = TRUE, fit.measures = TRUE, standardized = TRUE)
sem_mod1.5 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
indirect :=  a*b
'
sem_fit1.5 <- sem(sem_mod1.5, data=data)
summary(sem_fit1.5)
lavaanPlot(model = sem_fit1.5,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"), coefs = TRUE)
rmarkdown::render("Documents/GitHub/EECB1000_Causality/my_causality_takes.R", "2024_10_14_VP's_causality_takes")
rmarkdown::render("Documents/GitHub/EECB1000_Causality/my_causality_takes.R", "2024_10_14_VPs_causality_takes")
rmarkdown::render("Documents/GitHub/EECB1000_Causality/my_causality_takes.R", "2024VPcausalitytakes")
rmarkdown::render("Documents/GitHub/EECB1000_Causality/my_causality_takes.R", "pdf_document")
setwd(dir = "Documents/GitHub/EECB1000_Causality/")
rmarkdown::render("my_causality_takes.R", "pdf_document")
rmarkdown::render("my_causality_takes.R", "pdf_document")
setwd(dir = "Documents/GitHub/EECB1000_Causality/")
rmarkdown::render("my_causality_takes.R", "pdf_document")
rmarkdown::render("my_causality_takes.R", "pdf_document")
rmarkdown::render("my_causality_takes.R")
rmarkdown::render("my_causality_takes.R", "pdf_document")
rmarkdown::render()
rmarkdown::render(input = "my_causality_takes.R")
sem_mod1 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer * light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
'
sem_fit1 <- sem(sem_mod1, data=data)
sem_mod1 =   '
# observed outcomes to observed predictors
plant_size ~ fertilizer * light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
'
sem_fit1 <- sem(sem_mod1, data=data)
summary(sem_fit1)
standardizedsolution(sem_fit1)
sem_mod1 =   '
# observed outcomes to observed predictors
plant_size ~ fertilizer * light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
'
sem_fit1 <- sem(sem_mod1, data=data)
summary(sem_fit1)
sem_mod1 =   '
# observed outcomes to observed predictors
plant_size ~ a*fertilizer + c*light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
interaction ~ a*c
'
sem_fit1 <- sem(sem_mod1, data=data)
sem_mod1 =   '
# observed outcomes to observed predictors
plant_size ~ fertilizer:light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
'
sem_fit1 <- sem(sem_mod1, data=data)
sem_mod1 =   '
# observed outcomes to observed predictors
plant_size ~ fertilizer:light
herbivory ~ b*plant_size + foraging + light
foraging ~ light
'
sem_fit1 <- sem(sem_mod1, data=data)
